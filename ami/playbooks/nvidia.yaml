- name: Install packages
  ansible.builtin.dnf:
    name: '{{ item }}'
    state: present
    install_weak_deps: false
  loop:
    - gcc
    - kernel-modules-extra

#########################################################
# NVIDIA driver
#########################################################

- name: Blacklist nouveau
  community.general.kernel_blacklist:
    name: nouveau
    state: present

- name: Download NVIDIA driver installer {{ nvidia_driver_version }}
  ansible.builtin.get_url:
    url: '{{ nvidia_driver_url }}'
    dest: '/tmp/{{ nvidia_driver_executable }}'
  register: nvidia_driver_installer

- name: Run NVIDIA driver installer
  ansible.builtin.shell: |
    sh {{ nvidia_driver_installer.dest }} -a -s --ui=none -m=kernel-open

- name: Collect NVIDIA driver version
  shell: echo "nvidia-driver,{{ nvidia_driver_version }}" >> /etc/eks/versions.csv

- name: Pause for 180 seconds
  ansible.builtin.pause:
    seconds: 180

- name: Setup persistenced mode
  block:
    - name: Create persistenced service
      copy:
        src: nvidia-persistenced-override.service
        dest: /usr/lib/systemd/system/nvidia-persistenced-override.service

    - name: Enable persistenced service
      systemd:
        name: nvidia-persistenced-override
        daemon-reload: true
        enabled: true

#########################################################
# NVIDIA Fabric Manager
#########################################################

- name: Install NVIDIA Fabric Manager
  when: install_efa|bool
  block:
    - name: Download NVIDIA Fabric Manager
      ansible.builtin.get_url:
        url: '{{ nvidia_fabric_manager_url }}'
        dest: '/tmp/{{ nvidia_fabric_manager_archive }}'
      register: nvidia_fabric_manager_archive

    - name: Extract NVIDIA Fabric Manager
      ansible.builtin.unarchive:
        src: '{{ nvidia_fabric_manager_archive.dest }}'
        dest: '/usr/'
        mode: 0755
        owner: root
        group: root
        remote_src: true
        extra_opts:
          - --strip-components=1
          - --exclude
          - LICENSE

    - name: Link NVIDIA Fabric Manager service file
      copy:
        remote_src: true
        src: /usr/systemd/nvidia-fabricmanager.service
        dest: /usr/lib/systemd/system/nvidia-fabricmanager.service

    - name: Enable NVIDIA Fabric Manager
      systemd:
        name: nvidia-fabricmanager
        daemon-reload: true
        enabled: true

    - name: Collect NVIDIA Fabric Manager version
      shell: echo "nvidia-fabric-manager,{{ nvidia_driver_version }}" >> /etc/eks/versions.csv

#########################################################
# NVIDIA container toolkit
#########################################################

# https://github.com/NVIDIA/libnvidia-container/issues/208#issuecomment-1596723034
- name: Add nvidia-container-toolkit repo
  yum_repository:
    name: nvidia-container-toolkit
    description: NVIDIA container toolkit
    baseurl: https://nvidia.github.io/libnvidia-container/stable/rpm/$basearch
    repo_gpgcheck: true
    gpgcheck: false
    enabled: true
    gpgkey: https://nvidia.github.io/libnvidia-container/gpgkey
    sslverify: true
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt

- name: Add libnvidia-container repo
  yum_repository:
    name: libnvidia-container
    description: NVIDIA libnvidia-container
    baseurl: https://nvidia.github.io/libnvidia-container/stable/centos8/$basearch
    repo_gpgcheck: true
    gpgcheck: false
    enabled: true
    gpgkey: https://nvidia.github.io/libnvidia-container/gpgkey
    sslverify: true
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt

- name: Import nvidia-container-toolkit GPG key
  ansible.builtin.rpm_key:
    state: present
    key: https://nvidia.github.io/libnvidia-container/gpgkey

- name: Install nvidia-container-toolkit
  ansible.builtin.dnf:
    name: nvidia-container-toolkit
    state: latest
    update_cache: true
    install_weak_deps: false

#########################################################
# Clean-up
#########################################################

- name: Clean-up packages
  ansible.builtin.dnf:
    name: '{{ item }}'
    state: absent
    autoremove: true
  loop:
    - gcc
    - kernel-modules-extra
